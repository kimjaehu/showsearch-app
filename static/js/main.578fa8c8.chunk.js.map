{"version":3,"sources":["components/layout/Navbar.js","components/layout/Footer.js","actions/searchActions.js","actions/types.js","components/home/SearchForm.js","components/home/MovieCard.js","components/home/MoviesContainer.js","components/layout/Spinner.js","components/home/Landing.js","components/home/Movie.js","reducers/searchReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","href","target","rel","id","Footer","setLoading","type","SearchForm","onChange","e","props","searchMovie","value","onSubmit","preventDefault","fetchMovies","text","this","name","placeholder","Component","connect","state","movies","dispatch","payload","axios","get","process","then","response","data","catch","err","console","log","MovieCard","movie","src","Poster","alt","Title","Year","imdbID","MoviesContainer","content","Response","Search","map","index","key","Spinner","role","Landing","loading","Movie","fetchMovie","match","params","movieInfo","Genre","Released","Rated","imdbRating","Director","Writer","Actors","Plot","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.578fa8c8.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = () => {\n  return (\n    <div>\n      <nav className='navbar navbar-light bg-none mb-5'>\n        <div className='container'>\n          <div className='navbar-header'>\n            <Link className='navbar-brand text-black text-lg brand-text' to='/'>\n              showSearch\n            </Link>\n          </div>\n          <ul className='navbar-nav ml-auto text-light d-inline-block'>\n            <li className='nav-item d-inline-block mr-4'>\n              <a\n                href='http://www.omdbapi.com/'\n                target='_blank'\n                rel='noopener noreferrer'\n              >\n                <i className='fab fa-imdb fa-3x' id='imdb-logo' />\n              </a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <div>\n      <div className='row'>\n        <div className='col-md-12'>\n          <div className='footer p-3 mt-4 text-center bg-none text-dark'>\n            <span className='text-warning font-weight-normal'>\n              {' '}\n              Created by Jay Kim{' '}\n            </span>\n            with Redux JS and{' '}\n            <a\n              href='http://www.omdbapi.com/'\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              OMDB\n            </a>{' '}\n            API\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import { SEARCH_MOVIE, FETCH_MOVIES, FETCH_MOVIE, LOADING } from './types';\nimport axios from 'axios';\n\nexport const searchMovie = text => dispatch => {\n  dispatch({\n    type: SEARCH_MOVIE,\n    payload: text\n  });\n};\n\nexport const fetchMovies = text => dispatch => {\n  axios\n    .get(\n      `http://www.omdbapi.com/?apikey=${\n        process.env.REACT_APP_OMDB_API_KEY\n      }&s=${text}`\n    )\n    .then(response =>\n      dispatch({\n        type: FETCH_MOVIES,\n        payload: response.data\n      })\n    )\n    .catch(err => console.log(err));\n};\n\nexport const fetchMovie = id => dispatch => {\n  axios\n    .get(\n      `http://www.omdbapi.com/?apikey=${\n        process.env.REACT_APP_OMDB_API_KEY\n      }&i=${id}`\n    )\n    .then(response =>\n      dispatch({\n        type: FETCH_MOVIE,\n        payload: response.data\n      })\n    )\n    .catch(err => console.log(err));\n};\n\nexport const setLoading = () => {\n  return {\n    type: LOADING\n  };\n};\n","export const SEARCH_MOVIE = 'SEARCH_MOVIE';\nexport const FETCH_MOVIES = 'FETCH_MOVIES';\nexport const FETCH_MOVIE = 'FETCH_MOVIE';\nexport const LOADING = 'LOADING';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n  searchMovie,\n  fetchMovies,\n  setLoading\n} from '../../actions/searchActions';\n\nexport class SearchForm extends Component {\n  onChange = e => {\n    this.props.searchMovie(e.target.value);\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    this.props.fetchMovies(this.props.text);\n    this.props.setLoading();\n  };\n\n  render() {\n    return (\n      <div className='jumbotron bg-transparent jumbotron-fluid mt-5 text-center'>\n        <div className='container'>\n          <h1 className='display-4 mb-3'>SHOWSEARCH</h1>\n          <form id='searchForm' onSubmit={this.onSubmit}>\n            <input\n              type='text'\n              className='form-control'\n              name='searchText'\n              placeholder='Search Movies, TV Series ...'\n              onChange={this.onChange}\n            />\n            <button\n              type='submit'\n              className='btn btn btn-outline-secondary btn-bg mt-3'\n            >\n              Search\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStatesToProps = state => ({\n  text: state.movies.text\n});\n\nexport default connect(\n  mapStatesToProps,\n  { searchMovie, fetchMovies, setLoading }\n)(SearchForm);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class MovieCard extends Component {\n  render() {\n    const { movie } = this.props;\n    return (\n      <div className='col-md-4 col-lg-3 mb-5'>\n        <div className='card card-body bg-none text-center h-100'>\n          <img\n            className='card-img-top w-100 mb-2'\n            src={movie.Poster}\n            alt='Movie Cover'\n          />\n          <h5 className='card-title text-dark card-title'>\n            {movie.Title} - {movie.Year}\n          </h5>\n          <Link className='card-link' to={'/movie/' + movie.imdbID}>\n            Movie Details\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MovieCard;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport MovieCard from './MovieCard.js';\n\nexport class MoviesContainer extends Component {\n  render() {\n    const { movies } = this.props;\n    let content = '';\n\n    content =\n      movies.Response === 'True'\n        ? movies.Search.map((movie, index) => (\n            <MovieCard key={index} movie={movie} />\n          ))\n        : null;\n\n    return <div className='row'>{content}</div>;\n  }\n}\n\nconst mapStateToProps = state => ({\n  movies: state.movies.movies\n});\n\nexport default connect(mapStateToProps)(MoviesContainer);\n","import React from 'react';\n\nfunction Spinner() {\n  return (\n    <div className='d-flex justify-content-center'>\n      <div className='spinner-grow' role='status'>\n        <span className='sr-only'>Loading...</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Spinner;\n","import React, { Component } from 'react';\nimport SearchForm from './SearchForm';\nimport { connect } from 'react-redux';\nimport MoviesContainer from './MoviesContainer';\n\nimport Spinner from '../layout/Spinner';\n\nexport class Landing extends Component {\n  render() {\n    const { loading } = this.props;\n    return (\n      <div className='container'>\n        <SearchForm />\n        {loading ? <Spinner /> : <MoviesContainer />}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  loading: state.movies.loading\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { fetchMovie, setLoading } from '../../actions/searchActions';\n\nimport Spinner from '../layout/Spinner';\n\nexport class Movie extends Component {\n  componentDidMount() {\n    this.props.fetchMovie(this.props.match.params.id);\n    this.props.setLoading();\n  }\n\n  render() {\n    const { loading, movie } = this.props;\n\n    let movieInfo = (\n      <div className='container'>\n        <div className='row'>\n          <div className='col-md-4 card card-body'>\n            <img src={movie.Poster} className='thumbnail' alt='Poster' />\n          </div>\n          <div className='col-md-8'>\n            <h2 className='mb-4'>{movie.Title}</h2>\n            <ul className='list-group'>\n              <li className='list-group-item'>\n                <strong>Genre:</strong> {movie.Genre}\n              </li>\n              <li className='list-group-item'>\n                <strong>Released:</strong> {movie.Released}\n              </li>\n              <li className='list-group-item'>\n                <strong>Rated:</strong> {movie.Rated}\n              </li>\n              <li className='list-group-item'>\n                <strong>IMDB Rating:</strong> {movie.imdbRating}\n              </li>\n              <li className='list-group-item'>\n                <strong>Director:</strong> {movie.Director}\n              </li>\n              <li className='list-group-item'>\n                <strong>Writer:</strong> {movie.Writer}\n              </li>\n              <li className='list-group-item'>\n                <strong>Actors:</strong> {movie.Actors}\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='card card-body bg-light my-5 text-dark'>\n            <div className='col-md-12'>\n              <h3>About </h3>\n              {movie.Plot}\n              <hr />\n              <a\n                href={'https://www.imdb.com/title/' + movie.imdbID}\n                target='_blank'\n                rel='noopener noreferrer'\n                className='btn btn-primary'\n              >\n                View on IMDB\n              </a>\n              <Link to='/' className='btn btn-default text-light'>\n                Go Back To Search\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n\n    let content = loading ? <Spinner /> : movieInfo;\n    return <div>{content}</div>;\n  }\n}\n\nconst mapStateToProps = state => ({\n  loading: state.movies.loading,\n  movie: state.movies.movie\n});\n\nexport default connect(\n  mapStateToProps,\n  { fetchMovie, setLoading }\n)(Movie);\n","import {\n  SEARCH_MOVIE,\n  FETCH_MOVIES,\n  FETCH_MOVIE,\n  LOADING\n} from '../actions/types';\n\nconst initialState = {\n  text: '',\n  movies: [],\n  loading: false,\n  movie: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SEARCH_MOVIE:\n      return {\n        ...state,\n        text: action.payload,\n        loading: false\n      };\n    case FETCH_MOVIES:\n      return {\n        ...state,\n        movies: action.payload,\n        loading: false\n      };\n    case FETCH_MOVIE:\n      return {\n        ...state,\n        movie: action.payload,\n        loading: false\n      };\n    case LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport searchReducer from './searchReducer';\n\nexport default combineReducers({\n  movies: searchReducer\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport rootReducer from './reducers';\n\nconst middleware = [thunk];\nconst initialState = {};\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nimport './App.css';\n\nimport Navbar from './components/layout/Navbar';\nimport Footer from './components/layout/Footer';\nimport Landing from './components/home/Landing';\nimport Movie from './components/home/Movie';\n\nimport store from './store';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div>\n            <Navbar />\n            <Route exact path='/' component={Landing} />\n            <Route exact path='/movie/:id' component={Movie} />\n            <Footer />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}